version: "3"

services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    restart: on-failure
    ports:
      - ${DOCKER_INFLUXDB_INIT_PORT}:8086
    networks:
      - sysadmin

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
    env_file:
      - .env
    depends_on:
      - influxdb
    networks:
      - sysadmin

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana:rw
    depends_on:
      - influxdb
    ports:
      - ${GRAFANA_PORT}:3000
    networks:
      - sysadmin

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - 9100:9100
    networks:
      - monitoring
      - sysadmin

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitoring
      - sysadmin

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - monitoring
      - sysadmin


volumes:
  grafana-storage: {}
  influxdb-storage: {}
  prometheus_data: {}


networks:
  monitoring:
    driver: bridge
  sysadmin:
